#include<stdio.h>
struct arraystack
{
 int top;
 int capacity;
 int *array;
};
struct arraystack* createstack(int cap)
{
struct arraystack *stack;
stack=malloc(sizeof(struct arraystack));
stack->capacity=cap;
stack->top=-1;
n=(struct arraystack *)malloc(sizeof(int)*capcity)
}
int isfull(struct arraystack *stack)
{
if(stack->top==stack->capacity-1)
return(1);
else
return(0);
}
int isempty(struct arraystack *stack)
{
if(stack->top=-1)
return(1);
else
return(0);
}
void push(struct arraystack *stack,int item)
{
if(!is full(stack))
{
stack->top++;
stack->array[top]=item;
}
}
int pop(struct arraystack *stack)
{
int item;
if(!isempty(stack))
{
item=stack->array[top];
stack->top--;
return(item);
}
return(-1);
}
main()
{
 int choice;
 while(1)
 {
 printf("\t\t\t\t\t\n1.push\n2.pop\n3.exit");
 printf("enter your choice");
 scanf("%d",&choice);
 clrscr();
 switch(choice)
 {
  case 1://push();
	 printf("\nEnter a number");
	 scanf("%d",item);
	 push(stack,item);
	 break;
  case 2://pop();
	 item=pop(stack);
	 if(item=-1)
	 printf("stack is empty");
	 else
	 printf("\npoped value is %d",item);
	 break;
  case 3:exit(0);
  default:printf("invalid choice");
 }
 getch();
 }
}